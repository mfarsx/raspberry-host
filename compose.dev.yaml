version: '3.8'

services:
  # Development API with hot reload
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
      platforms:
        - linux/arm64
    container_name: pi-api-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGO_URL=mongodb://mongodb:27017/pi_app_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-key
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=debug
    volumes:
      - ./api:/app
      - /app/node_modules
      - api_logs:/app/logs
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pi-network
    command: npm run dev

  # Development Web with hot reload
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
      platforms:
        - linux/arm64
    container_name: pi-web-dev
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - REACT_APP_WS_URL=ws://localhost:3001/ws
      - REACT_APP_ENV=development
    volumes:
      - ./web:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - pi-network
    command: npm start

  # Development MongoDB (no auth for simplicity)
  mongodb:
    image: mongo:7.0-jammy
    container_name: pi-mongodb-dev
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=pi_app_dev
    volumes:
      - mongodb_dev_data:/data/db
      - mongodb_dev_config:/data/configdb
    ports:
      - "27017:27017"
    networks:
      - pi-network
    command: mongod --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Development Redis (no auth for simplicity)
  redis:
    image: redis:7.2-alpine
    container_name: pi-redis-dev
    restart: unless-stopped
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - pi-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  mongodb_dev_data:
    driver: local
  mongodb_dev_config:
    driver: local
  redis_dev_data:
    driver: local
  api_logs:
    driver: local

networks:
  pi-network:
    driver: bridge